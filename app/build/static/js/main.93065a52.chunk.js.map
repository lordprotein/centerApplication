{"version":3,"sources":["components/ApplicationList/ApplicationItem/ApplicationItem.module.css","components/Loader/Loader.module.css","components/FormAddApplication/FormAddApplication.module.css","components/Sidebar/UserInfo/UserInfo.module.css","components/Login/Login.module.css","components/ReportList/ReportItem/ReportItem.module.css","components/Page/Page.module.css","components/Button/Button.module.css","components/ApplicationList/ApplicationList.module.css","components/MenuList/MenuItem/MenuItem.module.css","components/App/App.module.css","components/Sidebar/Sidebar.module.css","components/MenuList/MenuList.module.css","components/BtnExit/BtnExit.module.css","components/Page/LoginPage/LoginPage.module.css","components/App/App.js","components/Page/Page.js","reducers/initialState.js","reducers/applications.js","constants/actionTypes.js","reducers/load.js","reducers/user.js","reducers/reducers.js","stores/stores.js","selectors/user.js","hoc/withRole.js","components/Button/Button.js","components/ApplicationList/ApplicationList.js","service/menuTitleList.js","service/service.js","selectors/applications.js","actions/applicationActions.js","components/Loader/Loader.js","actions/loadActions.js","selectors/load.js","components/ApplicationList/ApplicationItem/formattingFunctions.js","service/normalizeFunctions.js","components/SelectList/SelectList.js","containers/SelectList/SelectListContainer.js","components/ApplicationList/ApplicationItem/CountExecuters/CountExecuters.js","components/ApplicationList/ApplicationItem/BtnsForFree/BtnsForFree.js","components/ApplicationList/ApplicationItem/BtnsForPending/BtnsForPending.js","components/ApplicationList/ApplicationItem/BtnsForProcess/BtnsForProcess.js","components/ApplicationList/ApplicationItem/BtnRemoveExecuter/BtnRemoveExecuter.js","components/ApplicationList/ApplicationItem/ApplicationItem.js","containers/ApplicationList/ApplicationItem/ApplicationItemContainer.js","containers/ApplicationList/ApplicationListContainer.js","hoc/withLoader.js","containers/Page/PageContainer.js","components/Sidebar/Sidebar.js","components/MenuList/MenuList.js","service/linker.js","components/MenuList/MenuItem/MenuItem.js","containers/MenuList/MenuItem/MenuItemContainer.js","containers/MenuList/MenuListContainer.js","components/BtnExit/BtnExit.js","service/myCookie.js","actions/userActions.js","containers/BtnExit/BtnExitContainer.js","components/Sidebar/UserInfo/UserInfo.js","containers/Sidebar/UserInfo/UserInfoContainer.js","containers/Sidebar/SidebarContainer.js","components/ReportList/ReportList.js","components/ReportList/CalendarInterval/CalendarInterval.js","components/ReportList/ReportItem/ReportItem.js","containers/ReportList/ReportItem/ReportItemContainer.js","containers/ReportList/ReportListContainer.js","components/Page/ReportPage/ReportPage.js","components/Login/Login.js","containers/Login/LoginContainer.js","components/Page/LoginPage/LoginPage.js","components/FormAddApplication/FormAddApplication.js","containers/FormAddApplication/FormAddApplicationContainer.js","components/Page/AddApplicationPage/AddApplicationPage.js","containers/App/AppContainer.js","hoc/withRoutes.js","index.js"],"names":["module","exports","App","children","className","styles","bg","Page","title","page","initApplication","list","count","initLoad","isLoading","initUser","isLogin","userInfo","name","role","ID","existUsers","applications","state","action","type","appList","length","numItem","findIndex","item","id","newAppList","slice","data","priority","newList","numAppItem","load","status","user","isStatus","filter","full_name","combineReducers","store","createStore","reducers","selectorsUser","_libState","getAllInfo","existExecuters","this","generateAccess","roleName","WrappedComponent","props","componentDidMount","reduxSubscribe","updateStatus","getRole","getState","subscribe","isRoleRedux","setState","Component","withAdmin","ButtonAddApplication","to","btnAddApplication","Button","click","onClick","btn","ButtonWithAdmin","ButtonWithExecuter","ApplicationList","topLine","stylesItem","titleTask","titleDate","titleName","titleExecuters","titlePriority","titleStatus","menuTitleList","titleMenu","forRole","normalizeApp","session","map","caseNum","case_num","date","phone","phone_num","task","countExecuter","count_executer","currCountExecuters","current_count_executers","service","getApplItem","a","getResource","res","getApplList","userID","isAdmin","path","getExecuterList","appID","getExistExecuters","getReportAppWithStatus","logout","addApplication","Date","currDate","getFullYear","getMonth","getDate","uniqid","replace","methodRequset","postAcceptApp","id_executer","id_application","login","password","toCompleteApp","setPriority","setCountExecuter","resetAppOfExecuter","removeAppItem","url","objReq","fetch","domain","response","ok","json","method","body","JSON","stringify","headers","req","selectorApp","setAppList","removeApplication","updateTitleOfPage","updatePriority","Loader","cssload_dots","cssload_dot","version","xmlns","in","result","stdDeviation","mode","values","updateStatusLoad","selectorsLoad","priorityNormalize","num","reverse","valueList","dateNormalize","separator","String","shortenName","SelectList","handleSelect","defaultValue","onChange","disabled","value","key","SelectListContainer","e","target","SelectListExecuters","existExecutersList","executersList","SelectListExecutersWithAdmin","SelectListPriorityWithAdmin","CountExecutersWithAdmin","handleChange","placeholder","BtnsForFree","handleBtns","accept","remove","addOneMoreExecuter","BtnsForPending","isHideBtn","reset","BtnsForProcess","complete","BtnRemoveExecuter","removeExecuter","ApplicationItem","currCount","countExecuters","handleClick","isOpen","statusStyles","statusProps","transformStatus","shortTask","shortName","priorityWord","executersWord","normalizeDate","row","MoreInfo","executerList","moreInfo","infoTable","exeutersTable","style","margin","btnList","currStatus","statusFree","btnListFree","statusProcess","btnListProcess","statusCompleted","btnListPending","ApplicationItemContainer","isFirstOpen","firstOpenWrap","callback","getExecutersList","then","handleAccept","window","confirm","handleReset","handleRemove","handleComplete","handlePriority","filterHandle","handleRemoveExecuter","newStatus","err","console","log","newExecutersList","executer","idExecuter","newCount","filterExecuters","find","updatedData","connect","dispatch","bindActionCreators","appActions","addExecuterForApp","ApplicationListContainer","statusPage","titlePage","_generateAppList","statusLoad","ApplicationListWithLoader","isLoad","withLoader","applicationActions","PageContainer","Sidebar","bgSidebar","MenuList","menu","linker","word","link","wordLength","cyrillicToTranslit","transform","toLowerCase","i","prevLetter","letter","MenuItem","styleMenu","activeMenu","activeItem","MenuItemContainer","isActiveMenu","MenuListContainer","getMenuList","BtnExit","handleExit","history","useHistory","MyCookie","isObj","get","matches","document","cookie","match","RegExp","decodeURIComponent","undefined","parse","set","options","expires","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","myCookieUser","myCookieIsLogin","setUserInfo","updateStatusLogin","setExistExecuters","BtnExitContainer","push","userActions","UserInfo","icon","normalizeRole","UserInfoContainer","SidebarContainer","userRole","ReportList","handle","CalendarInterval","getStartDate","getEndDate","htmlFor","ReportForCompletedStatus","getExecuterReport","handleDate","wrapCalendar","table","executer_name","client_name","date_start","date_end","ReportItemWithStatus","filteredData","dateStart","dateEnd","selectedDate","newData","needDate","getList","ReportListContainer","getReportListWithStatus","titleReport","currentReport","reportList","G","ReportPage","Login","handleLogin","handlePassword","handleSend","errorText","field","LoginContainer","successfulAuth","doLogin","loginStatus","LoginPage","center","FormAddApplication","handleSubmit","error","formAddAoolication","required","FormAddApplicationContainer","fullName","handleChangeInput","alert","AddApplicationPage","AppContainer","savedUserData","PageContainerWithRoutes","_isMounted","updateLoginStatus","subscriber","componentWillUnmount","unsubscribe","isReduxLogin","isReduxRole","renderForRoute","routeConstructor","renderElem","render","getListRoutes","otherRoutes","loginRoute","addAppPage","renderForMain","from","generatePageAddApplication","exact","withRoutes","RenderApp","StrictMode","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.93065a52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ApplicationItem_item__OsBoq\",\"row\":\"ApplicationItem_row__3n65z\",\"titleTask\":\"ApplicationItem_titleTask__USJDv\",\"titleDate\":\"ApplicationItem_titleDate__3GCF9\",\"titleName\":\"ApplicationItem_titleName__Z3zHK\",\"titleExecuters\":\"ApplicationItem_titleExecuters__1BxZR\",\"titlePriority\":\"ApplicationItem_titlePriority__1fs7u\",\"titleStatus\":\"ApplicationItem_titleStatus__3YMpO\",\"title\":\"ApplicationItem_title__1Cgxy\",\"statusFree\":\"ApplicationItem_statusFree__2Hl8G\",\"statusProcess\":\"ApplicationItem_statusProcess__30FyM\",\"statusCompleted\":\"ApplicationItem_statusCompleted__2Mwic\",\"moreInfo\":\"ApplicationItem_moreInfo__1lG_6\",\"infoTable\":\"ApplicationItem_infoTable__1C1sr\",\"exeutersTable\":\"ApplicationItem_exeutersTable__1pv-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cssload_dots\":\"Loader_cssload_dots__2Cs1-\",\"cssload_dot\":\"Loader_cssload_dot__5lXiO\",\"cssload-dot-colors\":\"Loader_cssload-dot-colors__22Zvu\",\"cssload-dot-rotate-1\":\"Loader_cssload-dot-rotate-1__2jw02\",\"cssload-dot-move\":\"Loader_cssload-dot-move__3FYmw\",\"cssload-dot-rotate-2\":\"Loader_cssload-dot-rotate-2__mlMPq\",\"cssload-dot-rotate-3\":\"Loader_cssload-dot-rotate-3__2xBCe\",\"cssload-dot-rotate-4\":\"Loader_cssload-dot-rotate-4__3LujZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formAddAoolication\":\"FormAddApplication_formAddAoolication__2wleI\",\"field\":\"FormAddApplication_field__27ibM\",\"error\":\"FormAddApplication_error__3g1Kb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"UserInfo_userInfo__1e1tX\",\"icon\":\"UserInfo_icon__3ptrA\",\"title\":\"UserInfo_title__vnGPT\",\"role\":\"UserInfo_role__vl3W6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__o7pbH\",\"field\":\"Login_field__3an5_\",\"btn\":\"Login_btn__3XjyS\",\"err\":\"Login_err__UQAqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ReportItem_title__3gs4N\",\"table\":\"ReportItem_table__2Wpfu\",\"wrapCalendar\":\"ReportItem_wrapCalendar__2wRnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__1nUDZ\",\"title\":\"Page_title__1egAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__50p2f\",\"btnAddApplication\":\"Button_btnAddApplication__1qEVh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appList\":\"ApplicationList_appList__34I7E\",\"topLine\":\"ApplicationList_topLine__3O7Ie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MenuItem_item__1donn\",\"activeItem\":\"MenuItem_activeItem__2Lxxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"App_bg__1h7bw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgSidebar\":\"Sidebar_bgSidebar__nTAYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"MenuList_menu__ZNHqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"BtnExit_btn__2Uld-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoginPage_center__1d-cZ\"};","import React from 'react';\r\nimport styles from './App.module.css';\r\n\r\n\r\nexport const App = ({ children }) => {\r\n    return (\r\n        <div className={styles.bg}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport styles from './Page.module.css';\r\n\r\n\r\nexport const Page = ({ title, children }) => {\r\n    return (\r\n        <main className={styles.page}>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </main>\r\n    );\r\n}","export const initApplication = {\r\n    title: 'Page',\r\n    list: [],\r\n    count: 0,\r\n}\r\n\r\nexport const initLoad = {\r\n    isLoading: true\r\n}\r\n\r\nexport const initUser = {\r\n    isLogin: false,\r\n    userInfo: {\r\n        name: '',\r\n        role: '',\r\n        ID: ''\r\n    },\r\n    existUsers: []\r\n}\r\n\r\n// export const initialState = {\r\n//     data: {\r\n//         isAuthorization: false,\r\n//         userInfo: {\r\n//             name: '',\r\n//             role: '', //admin or executer\r\n//             ID: ''\r\n//         },\r\n//         appPart: {\r\n//             name: '',\r\n//             list: [],\r\n//             count: 0,\r\n//         }\r\n//     },\r\n//     visible: {\r\n\r\n//     },\r\n//     loading: true\r\n// }\r\n\r\n// export default initialState;","import { initApplication } from './initialState';\r\nimport * as types from '../constants/actionTypes';\r\n\r\nconst applications = (state = initApplication, action) => {\r\n    switch (action.type) {\r\n        case types.SET_APP_LIST: {\r\n            const { appList } = action;\r\n\r\n            return {\r\n                ...state,\r\n                list: appList,\r\n                count: appList.length\r\n            }\r\n        }\r\n\r\n        case types.REMOVE_APPLICATION: {\r\n            const { ID } = action;\r\n            const { list } = state;\r\n\r\n            const numItem = list.findIndex(item => item.id === ID);\r\n\r\n            const newAppList = [...list.slice(0, numItem), ...list.slice(numItem + 1)];\r\n\r\n\r\n            return {\r\n                ...state,\r\n                list: newAppList\r\n            }\r\n        }\r\n\r\n        case types.UPDATE_TITLE_PAGE: {\r\n            const { title } = action;\r\n\r\n            return {\r\n                ...state,\r\n                title\r\n            }\r\n        }\r\n\r\n\r\n        case types.UPDATE_PRIORITY: {\r\n            const { data: { ID, priority } } = action;\r\n            const { list } = state;\r\n\r\n            const newList = [...list];\r\n            const numAppItem = list.findIndex(item => item.id === ID);\r\n\r\n            newList[numAppItem].priority = priority;\r\n\r\n            return {\r\n                ...state,\r\n                list: newList\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default applications;","export const SET_APP_LIST = 'SET_APP_LIST';\r\nexport const REMOVE_APPLICATION = 'REMOVE_APPLICATION';\r\nexport const UPDATE_TITLE_PAGE = 'UPDATE_TITLE_PAGE';\r\nexport const UPDATE_PRIORITY = 'UPDATE_PRIORITY';\r\nexport const SET_EXIST_EXECUTERS = 'SET_EXIST_EXECUTERS';\r\n\r\n\r\nexport const UPDATE_STATUS_LOAD = 'UPDATE_STATUS_LOAD';\r\n\r\nexport const SET_USER_INFO = 'SET_USER_INFO';\r\nexport const UPDATE_STATUS_LOGIN = 'UPDATE_STATUS_LOGIN';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';","import {initLoad} from './initialState';\r\nimport * as types from '../constants/actionTypes';\r\n\r\nconst load = (state = initLoad, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_STATUS_LOAD: {\r\n            const { status } = action;\r\n            \r\n            return {\r\n                ...state,\r\n                isLoading: status\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default load;","import { initUser } from './initialState';\r\nimport * as types from '../constants/actionTypes';\r\n\r\nconst user = (state = initUser, action) => {\r\n    switch (action.type) {\r\n        case types.LOGIN: {\r\n            const { data: { name, role, ID } } = action;\r\n            return {\r\n                ...state,\r\n                isLogin: true,\r\n                userInfo: { name, role, ID }\r\n            }\r\n        }\r\n\r\n        case types.LOGOUT: {\r\n            return {\r\n                ...state,\r\n                isLogin: false,\r\n                userInfo: { name: '', role: '', ID: '' }\r\n            }\r\n        }\r\n\r\n        case types.SET_USER_INFO: {\r\n            const { data: { name, role, ID } } = action;\r\n\r\n            return {\r\n                ...state,\r\n                userInfo: {\r\n                    name,\r\n                    role,\r\n                    ID\r\n                }\r\n            }\r\n        }\r\n\r\n        case types.UPDATE_STATUS_LOGIN: {\r\n            const { isStatus } = action;\r\n\r\n            return {\r\n                ...state,\r\n                isLogin: isStatus\r\n            }\r\n        }\r\n\r\n        case types.SET_EXIST_EXECUTERS: {\r\n            let { list } = action;\r\n            const { ID } = state.userInfo;\r\n\r\n            list = list.filter(item => item.full_name !== 'Пользователь' && item.ID !== ID);\r\n\r\n            return {\r\n                ...state,\r\n                existUsers: list\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default user;","import {combineReducers} from 'redux';\r\nimport applications from './applications';\r\nimport load from './load';\r\nimport user from './user';\r\n\r\n\r\nexport default combineReducers({\r\n    applications,\r\n    load,\r\n    user\r\n});","import { createStore } from 'redux';\r\nimport reducers from '../reducers/reducers';\r\n\r\nexport const store = createStore(reducers);","class SelectorsUser {\r\n    constructor() {\r\n        this._libState = 'user'\r\n    }\r\n\r\n    status = (state) => {\r\n        return state[this._libState].isLogin;\r\n    }\r\n\r\n    name = (state) => {\r\n        return state[this._libState].userInfo.name\r\n    }\r\n\r\n    role = (state) => {\r\n        return state[this._libState].userInfo.role\r\n    }\r\n\r\n    id = (state) => {\r\n        return state[this._libState].userInfo.ID\r\n    }\r\n\r\n    getAllInfo = (state) => {\r\n        return state[this._libState].userInfo\r\n    }\r\n\r\n    existExecuters = (state) => {\r\n        return state[this._libState].existUsers;\r\n    }\r\n}\r\n\r\nexport const selectorsUser = new SelectorsUser();","import React, { Component } from 'react';\r\nimport { store } from '../stores/stores';\r\nimport { selectorsUser } from '../selectors/user';\r\n\r\n\r\nconst generateAccess = (roleName, WrappedComponent) => {\r\n    return class extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                role: this.getRole()\r\n            }\r\n        }\r\n\r\n        componentDidMount = () => {\r\n            this.reduxSubscribe(this.updateStatus);\r\n        }\r\n\r\n        getRole = () => {\r\n            return selectorsUser.role(store.getState());\r\n        }\r\n\r\n        reduxSubscribe = () => store.subscribe(this.updateStatus);\r\n\r\n        updateStatus = () => {\r\n            const isRoleRedux = this.getRole();\r\n            const { role } = this.state;\r\n\r\n            if (isRoleRedux !== role) this.setState({ role: isRoleRedux });\r\n        }\r\n\r\n        render() {\r\n            const { role } = this.state;\r\n\r\n            if (role !== roleName) return <></>;\r\n            return <WrappedComponent {...this.props} />\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const withAdmin = (WrappedComponent) => generateAccess('Administrator', WrappedComponent);\r\n\r\nexport const withExecuter = (WrappedComponent) => generateAccess('Executer', WrappedComponent);","import React from 'react';\r\nimport styles from './Button.module.css';\r\nimport { withAdmin, withExecuter } from '../../hoc/withRole';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const ButtonAddApplication = () => {\r\n    return (\r\n        <Link to='application/add' ><button className={styles.btnAddApplication}></button></Link>\r\n    );\r\n}\r\n\r\n\r\nexport const Button = ({ title, click }) => {\r\n    return (\r\n        <button onClick={click} className={styles.btn}>{title}</button>\r\n    );\r\n}\r\n\r\nexport const ButtonWithAdmin = withAdmin(Button);\r\nexport const ButtonWithExecuter = withExecuter(Button);","import React from 'react';\r\nimport styles from './ApplicationList.module.css';\r\nimport stylesItem from './ApplicationItem/ApplicationItem.module.css';\r\n\r\n\r\nexport const ApplicationList = ({ children }) => {\r\n    return (\r\n        <div className={styles.appList}>\r\n            <div className={styles.topLine}>\r\n                {/* <div className={stylesItem.title}><input type='checkbox' /></div> */}\r\n                <div className={stylesItem.titleTask}>Задача</div>\r\n                <div className={stylesItem.titleDate}>Дата</div>\r\n                <div className={stylesItem.titleName}>Фио</div>\r\n                <div className={stylesItem.titleExecuters}>Исполнитель(-ли)</div>\r\n                <div className={stylesItem.titlePriority}>Приоритет</div>\r\n                <div className={stylesItem.titleStatus}>Статус</div>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    );\r\n}","export const menuTitleList = [\r\n    {\r\n        titleMenu: 'Свободные',\r\n        status: 'free'\r\n    },\r\n    {\r\n        titleMenu: 'В процессе',\r\n        status: 'process'\r\n    },\r\n    {\r\n        titleMenu: 'Завершенные',\r\n        status: 'completed'\r\n    },\r\n    {\r\n        titleMenu: 'Ожидаемые',\r\n        status: 'pending'\r\n    },\r\n    {\r\n        titleMenu: 'Отчёты',\r\n        status: null,\r\n        forRole: 'Administrator'\r\n    }\r\n];","import uniqid from 'uniqid';\r\nimport { menuTitleList } from './menuTitleList';\r\n\r\n\r\nclass BaseFuncService {\r\n    constructor() {\r\n        this.domain = 'http://localhost:3001';\r\n    }\r\n\r\n    getResource = async (url = '', objReq = {}) => {\r\n        const response = await fetch(`${this.domain}/${url}`, objReq);\r\n\r\n        if (!response.ok) {\r\n            throw response.status;\r\n        }\r\n\r\n        return response.json();\r\n    }\r\n\r\n    methodRequset = async (url, method, data = {}) => {\r\n        const req = await this.getResource(url, {\r\n            method,\r\n            body: JSON.stringify(data),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n\r\n        return await req;\r\n    }\r\n}\r\n\r\n\r\nclass Service extends BaseFuncService {\r\n    // constructor(domain) {\r\n    // super(domain);\r\n    // }\r\n\r\n    //Get\r\n\r\n    getApplItem = async (id) => {\r\n        const res = await this.getResource(`/application/${id}`);\r\n        return normalizeApp(res);\r\n    }\r\n\r\n    getApplList = async (status, userID, isAdmin) => {\r\n        const path = isAdmin\r\n            ? `/application/list/${status}`\r\n            : `/executer/application/list/${status}/${userID}`;\r\n\r\n        const res = await this.getResource(path);\r\n        return normalizeApp(res);\r\n    }\r\n\r\n    getExecuterList = (appID) => {\r\n        return this.getResource(`/application/executers/${appID}`);\r\n    }\r\n\r\n    getExistExecuters = () => {\r\n        return this.getResource('/executer');\r\n    }\r\n\r\n    getReportAppWithStatus = (status, id = null) => {\r\n        const path = id ? `/report/status/${status}/${id}` : `/report/status/${status}`;\r\n\r\n        return this.getResource(path);\r\n    }\r\n\r\n    logout = () => {\r\n        return this.getResource(`/logout`);\r\n    }\r\n\r\n    //Post\r\n\r\n    addApplication = data => {\r\n        const date = new Date();\r\n        const currDate = `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;\r\n        data = {\r\n            ...data,\r\n            ID: uniqid(),\r\n            date: currDate,\r\n            phone: data.phone.replace(/[- )(]/g, '')\r\n        };\r\n\r\n        return this.methodRequset(`/application`, 'POST', data);\r\n\r\n    }\r\n\r\n    postAcceptApp = (id_executer, id_application) => {\r\n        const data = {\r\n            id: uniqid(),\r\n            id_application,\r\n        }\r\n\r\n        return this.methodRequset(`/executer/application/accept/${id_executer}`, 'POST', data);\r\n    }\r\n\r\n    login = (login, password) => {\r\n        return this.methodRequset(`/login`, 'POST', { login, password });\r\n    }\r\n    //Update\r\n\r\n    toCompleteApp = (appID) => {\r\n        return this.methodRequset(`/application/status/${appID}`, 'PUT', { status: menuTitleList[2].status });\r\n    }\r\n\r\n    setPriority = (appID, priority) => {\r\n        return this.methodRequset(`/application/priority/${appID}`, 'PUT', { priority });\r\n    }\r\n\r\n    setCountExecuter = (appID, count) => {\r\n        return this.methodRequset(`/application/count/executer/${appID}`, 'PUT', { count });\r\n    }\r\n\r\n    //Delete\r\n\r\n    resetAppOfExecuter = (userID, appID) => {\r\n        return this.methodRequset(`/executer/application/reset/${userID}/${appID}`, 'DELETE');\r\n    }\r\n\r\n    removeAppItem = (userID) => {\r\n        return this.methodRequset(`/application/${userID}`, 'DELETE');\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction normalizeApp(data) {\r\n    if (data.session === false) return [];\r\n\r\n    return data.map(item => {\r\n        const { ID, case_num, date, full_name, phone_num, priority, status, task, count_executer, current_count_executers } = item;\r\n\r\n        return {\r\n            id: ID,\r\n            caseNum: case_num,\r\n            date,\r\n            name: full_name,\r\n            phone: phone_num,\r\n            priority,\r\n            status,\r\n            task,\r\n            countExecuter: count_executer,\r\n            currCountExecuters: current_count_executers\r\n        };\r\n    })\r\n}\r\n\r\n\r\nexport const service = new Service();","class SelectorsApp {\r\n    list = ({ applications }) => {\r\n        return applications.list;\r\n    }\r\n\r\n    title = ({ applications }) => {\r\n        return applications.title;\r\n    }\r\n\r\n    count = ({ applications }) => {\r\n        return applications.count;\r\n    }\r\n}\r\n\r\nexport const selectorApp = new SelectorsApp();","import * as actionTypes from '../constants/actionTypes';\r\n\r\n\r\nexport function setAppList(appList) {\r\n    return {\r\n        type: actionTypes.SET_APP_LIST,\r\n        appList\r\n    }\r\n}\r\n\r\nexport function removeApplication(ID) {\r\n    return {\r\n        type: actionTypes.REMOVE_APPLICATION,\r\n        ID\r\n    }\r\n}\r\n\r\nexport function updateTitleOfPage(title) {\r\n    return {\r\n        type: actionTypes.UPDATE_TITLE_PAGE,\r\n        title\r\n    }\r\n}\r\n\r\nexport function updatePriority(ID, priority) {\r\n    return {\r\n        type: actionTypes.UPDATE_PRIORITY,\r\n        data: { ID, priority }\r\n    }\r\n}","import React from 'react';\r\nimport styles from './Loader.module.css';\r\n\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <>\r\n        <div className={styles.cssload_dots}>\r\n            <div className={styles.cssload_dot}></div>\r\n            <div className={styles.cssload_dot}></div>\r\n            <div className={styles.cssload_dot}></div>\r\n            <div className={styles.cssload_dot}></div>\r\n            <div className={styles.cssload_dot}></div>\r\n        </div>\r\n\r\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <defs>\r\n                <filter id=\"goo\">\r\n                    <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"12\" ></feGaussianBlur>\r\n                    <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0\t0 1 0 0 0\t0 0 1 0 0\t0 0 0 18 -7\" result=\"goo\" ></feColorMatrix>\r\n                    {/* <feBlend in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" ></feBlend> */}\r\n\t\t</filter>\r\n            </defs>\r\n        </svg>\r\n        </>\r\n    );\r\n}\r\n","import * as actionTypes from '../constants/actionTypes';\r\n\r\n\r\nexport function updateStatusLoad(status) {\r\n    return {\r\n        type: actionTypes.UPDATE_STATUS_LOAD,\r\n        status\r\n    }\r\n}","class SelectorsLoad {\r\n    status = ({ load }) => {\r\n        return load.isLoading;\r\n    }\r\n}\r\n\r\nexport const selectorsLoad = new SelectorsLoad();","export const priorityNormalize = (num, reverse) => {\r\n    const valueList = ['Срочно', 'Предпочтительно', 'Не срочно'];\r\n\r\n    if (!num) return valueList;\r\n\r\n    if (!reverse) {\r\n        switch (+num) {\r\n            case 1: return valueList[0];\r\n            case 2: return valueList[1];\r\n            case 3: return valueList[2];\r\n            default: return;\r\n        }\r\n    }\r\n\r\n    switch (num) {\r\n        case valueList[0]: return 1;\r\n        case valueList[1]: return 2;\r\n        case valueList[2]: return 3;\r\n        default: return;\r\n    }\r\n}\r\n\r\nexport const generateExecuterCount = (currCount, countExecuters) => {\r\n    currCount = +currCount;\r\n    countExecuters = +countExecuters;\r\n\r\n    if (countExecuters === 1) return 1;\r\n    if (currCount === countExecuters) return countExecuters;\r\n    if (currCount < countExecuters) return `${currCount} из ${countExecuters}`;\r\n}\r\n","export const dateNormalize = (date, separator = '/') => {\r\n    date = new Date(date);\r\n\r\n    const res = `${date.getDate() + separator + (date.getMonth() + 1) + separator + date.getFullYear()}`;\r\n    \r\n    return String(date) !== 'Invalid Date' ? res : 'Неправильная дата';\r\n}\r\n\r\nexport const shortenName = (name, count = 20) => {\r\n    return `${name.slice(0, count)} ...`;\r\n}","import React from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\n\r\nexport const SelectList = ({ list, handleSelect, defaultValue, title }) => {\r\n    return (\r\n        <select onChange={handleSelect} defaultValue={title}>\r\n            {title && <option disabled>{title}</option>}\r\n            {list.map(item => {\r\n                const { value, title } = item;\r\n                if (value) {\r\n                    return <option value={value} key={uniqid()}>{title}</option>;\r\n                }\r\n\r\n                return <option key={uniqid()}>{item}</option>\r\n            })}\r\n        </select>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { SelectList } from '../../components/SelectList/SelectList';\r\nimport { withAdmin } from '../../hoc/withRole';\r\nimport { priorityNormalize } from '../../components/ApplicationList/ApplicationItem/formattingFunctions';\r\nimport { selectorsUser } from '../../selectors/user';\r\nimport { store } from '../../stores/stores';\r\n\r\n\r\nclass SelectListContainer extends Component {\r\n\r\n    handleSelect = (e) => {\r\n        const { value } = e.target;\r\n        this.props.children(value);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <SelectList\r\n                {...this.props}\r\n                handleSelect={this.handleSelect}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectListContainer;\r\n\r\n\r\nexport const SelectListExecuters = ({ existExecutersList, title = '', children }) => {\r\n    let executersList = [];\r\n\r\n    \r\n    \r\n    if (existExecutersList) {\r\n        executersList = existExecutersList.map(({ full_name, ID }) => {\r\n            return {\r\n                title: full_name,\r\n                value: ID\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        executersList = selectorsUser.existExecuters(store.getState()).map(({ full_name, ID }) => {\r\n            return {\r\n                title: full_name,\r\n                value: ID\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <SelectListContainer\r\n            list={executersList}\r\n            title={title}\r\n        >\r\n            {children}\r\n        </SelectListContainer>\r\n    );\r\n}\r\n\r\n\r\nexport const SelectListPriority = ({ handleSelect }) => {\r\n    const { setPriority } = handleSelect;\r\n\r\n    return (\r\n        <SelectListContainer\r\n            list={priorityNormalize()}\r\n            title={'Выставить приоритет'}\r\n        >\r\n            {(value) => setPriority(priorityNormalize(value, true))}\r\n        </SelectListContainer>\r\n    );\r\n}\r\n\r\nexport const SelectListExecutersWithAdmin = withAdmin(SelectListExecuters);\r\nexport const SelectListPriorityWithAdmin = withAdmin(SelectListPriority);","import React from 'react';\r\nimport { withAdmin } from '../../../../hoc/withRole';\r\n\r\n\r\nexport const CountExecuters = ({ handleChange }) => {\r\n    const { setCountExecuter } = handleChange;\r\n\r\n    return (\r\n        <input type=\"number\" onChange={setCountExecuter} placeholder='Кол-во исполнителей' />\r\n    );\r\n}\r\n\r\nexport const CountExecutersWithAdmin = withAdmin(CountExecuters);","import React from 'react';\r\nimport { ButtonWithAdmin, ButtonWithExecuter } from '../../../Button/Button';\r\nimport { SelectListExecutersWithAdmin, SelectListPriorityWithAdmin } from '../../../../containers/SelectList/SelectListContainer';\r\nimport { CountExecutersWithAdmin } from '../CountExecuters/CountExecuters';\r\n\r\n\r\nexport const BtnsForFree = ({ handleBtns, data, existExecutersList }) => {\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <ButtonWithExecuter\r\n                    title=\"Принять\"\r\n                    click={handleBtns.accept}\r\n                />\r\n\r\n                <ButtonWithAdmin\r\n                    title=\"Удалить\"\r\n                    click={handleBtns.remove}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <SelectListPriorityWithAdmin handleSelect={handleBtns} />\r\n\r\n                <SelectListExecutersWithAdmin\r\n                    existExecutersList={existExecutersList}\r\n                    title='Назначить исполнителем'\r\n                >\r\n                    {(value) => handleBtns.addOneMoreExecuter(value)}\r\n                </SelectListExecutersWithAdmin>\r\n\r\n                <CountExecutersWithAdmin handleChange={handleBtns} />\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { ButtonWithAdmin, ButtonWithExecuter } from '../../../Button/Button';\r\nimport { SelectListExecutersWithAdmin, SelectListPriorityWithAdmin } from '../../../../containers/SelectList/SelectListContainer';\r\nimport { CountExecutersWithAdmin } from '../CountExecuters/CountExecuters';\r\nimport { store } from '../../../../stores/stores';\r\nimport { selectorsUser } from '../../../../selectors/user';\r\nimport { selectorApp } from '../../../../selectors/applications';\r\n\r\n\r\nexport const BtnsForPending = ({ handleBtns, data, existExecutersList }) => {\r\n    const isHideBtn = selectorApp.title(store.getState()) === 'Ожидаемые' ? true : false;\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {isHideBtn || (\r\n                    <ButtonWithExecuter\r\n                        title=\"Принять\"\r\n                        click={handleBtns.accept}\r\n                    />\r\n                )}\r\n\r\n                <ButtonWithAdmin\r\n                    title=\"Удалить\"\r\n                    click={handleBtns.remove}\r\n                />\r\n\r\n                <ButtonWithExecuter\r\n                    title=\"Отказаться\"\r\n                    click={handleBtns.reset}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <SelectListPriorityWithAdmin handleSelect={handleBtns} />\r\n\r\n                <SelectListExecutersWithAdmin\r\n                    existExecutersList={existExecutersList}\r\n                    title='Назначить исполнителем'\r\n                >\r\n                    {(value) => handleBtns.addOneMoreExecuter(value)}\r\n                </SelectListExecutersWithAdmin>\r\n\r\n                <CountExecutersWithAdmin handleChange={handleBtns} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { ButtonWithAdmin, ButtonWithExecuter } from '../../../Button/Button';\r\n\r\n\r\nexport const BtnsForProcess = ({ handleBtns }) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                <ButtonWithExecuter\r\n                    title=\"Отказаться\"\r\n                    click={handleBtns.reset}\r\n                />\r\n                <ButtonWithAdmin\r\n                    title=\"Удалить\"\r\n                    click={handleBtns.remove}\r\n                />\r\n                <ButtonWithExecuter\r\n                    title=\"Завершить\"\r\n                    click={handleBtns.complete}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { ButtonWithAdmin } from '../../../Button/Button';\r\n\r\n\r\nexport const BtnRemoveExecuter = ({ handleBtns, ID }) => {\r\n    return (\r\n        <ButtonWithAdmin\r\n            title='Удалить'\r\n            click={() => handleBtns.removeExecuter(ID)}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport styles from './ApplicationItem.module.css';\r\nimport { menuTitleList } from '../../../service/menuTitleList';\r\nimport { priorityNormalize, generateExecuterCount } from './formattingFunctions';\r\nimport { dateNormalize, shortenName } from '../../../service/normalizeFunctions';\r\nimport uniqid from 'uniqid';\r\nimport { BtnsForFree } from './BtnsForFree/BtnsForFree';\r\nimport { BtnsForPending } from './BtnsForPending/BtnsForPending';\r\nimport { BtnsForProcess } from './BtnsForProcess/BtnsForProcess';\r\nimport { BtnRemoveExecuter } from './BtnRemoveExecuter/BtnRemoveExecuter';\r\n\r\n\r\nexport const ApplicationItem = (props) => {\r\n    \r\n    const { handleClick, isOpen, data } = props,\r\n        {\r\n            date,\r\n            task,\r\n            name,\r\n            priority,\r\n            countExecuter,\r\n            currCountExecuters,\r\n\r\n        } = data,\r\n\r\n        statusStyles = statusProps(data).styles,\r\n        transformStatus = statusProps(data).title,\r\n        shortTask = shortenName(task),\r\n        shortName = shortenName(name),\r\n        priorityWord = priorityNormalize(priority),\r\n        executersWord = generateExecuterCount(currCountExecuters, countExecuter),\r\n        normalizeDate = dateNormalize(date);\r\n\r\n    return (\r\n        <div className={styles.item}>\r\n            <div className={styles.row} onClick={handleClick}>\r\n                {/* <div className={styles.title}>\r\n                    <input type='checkbox' />\r\n                </div> */}\r\n                <div className={styles.titleTask}>{shortTask}</div>\r\n                <div className={styles.titleDate}>{normalizeDate}</div>\r\n                <div className={styles.titleName}>{shortName}</div>\r\n                <div className={styles.titleExecuters}>{executersWord}</div>\r\n                <div className={styles.titlePriority}>{priorityWord}</div>\r\n                <div className={statusStyles}>{transformStatus}</div>\r\n            </div>\r\n            {isOpen && <MoreInfo {...props} />}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst MoreInfo = (props) => {\r\n    const { data, handleBtns, existExecutersList } = props;\r\n    const { task, name, phone, executerList, status, caseNum } = data;\r\n\r\n    return (\r\n        <div className={styles.moreInfo}>\r\n            <table className={styles.infoTable}>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>ФИО заявителя</td>\r\n                        <td>{name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Номер корпуса</td>\r\n                        <td>{caseNum}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Номер телефона</td>\r\n                        <td>{phone}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Задача</td>\r\n                        <td>{task}</td>\r\n                    </tr>\r\n                    {executerList.length\r\n                        ?\r\n                        (\r\n                            <tr>\r\n                                <td>Список исполнителей</td>\r\n                                <td>\r\n                                    <table className={styles.exeutersTable}>\r\n                                        <tbody>\r\n                                            {executerList.map(item => <tr key={uniqid()}><td>{item.full_name}</td><td>{status !== 'completed' ? <BtnRemoveExecuter handleBtns={handleBtns} ID={item.ID} /> : false}</td></tr>)}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                        :\r\n                        false}\r\n\r\n                </tbody>\r\n            </table>\r\n            <div style={{margin: '20px 0'}}>\r\n                {statusProps(data).btnList(handleBtns, existExecutersList)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst statusProps = (data) => {\r\n    const { currStatus } = data;\r\n\r\n    switch (currStatus) {\r\n        case menuTitleList[0].status: {\r\n            return {\r\n                title: 'Свободно',\r\n                styles: `${styles.titleStatus} ${styles.statusFree}`,\r\n                btnList: (handleBtns, existExecutersList) => btnListFree(handleBtns, data, existExecutersList)\r\n            }\r\n        }\r\n\r\n        case menuTitleList[1].status: {\r\n            return {\r\n                title: 'В процессе',\r\n                styles: `${styles.titleStatus} ${styles.statusProcess}`,\r\n                btnList: (handleBtns, existExecutersList) => btnListProcess(handleBtns, data, existExecutersList)\r\n            }\r\n        }\r\n\r\n        case menuTitleList[2].status: {\r\n            return {\r\n                title: 'Завершено',\r\n                styles: `${styles.titleStatus} ${styles.statusCompleted}`,\r\n                btnList: () => { }\r\n            }\r\n        }\r\n\r\n        case menuTitleList[3].status: {\r\n            return {\r\n                title: `Идёт набор`,\r\n                styles: `${styles.titleStatus} ${styles.statusFree}`,\r\n                btnList: (handleBtns, existExecutersList) => btnListPending(handleBtns, data, existExecutersList)\r\n            }\r\n        }\r\n\r\n        default: return;\r\n    }\r\n}\r\n\r\n\r\nconst btnListFree = (handleBtns, data, existExecutersList) => {\r\n    return (\r\n        <BtnsForFree\r\n            data={data}\r\n            handleBtns={handleBtns}\r\n            existExecutersList={existExecutersList}\r\n        />\r\n    )\r\n}\r\n\r\nconst btnListPending = (handleBtns, data, existExecutersList) => {\r\n    return (\r\n        <BtnsForPending\r\n            data={data}\r\n            handleBtns={handleBtns}\r\n            existExecutersList={existExecutersList}\r\n        />\r\n    );\r\n}\r\n\r\nconst btnListProcess = (handleBtns, data) => {\r\n    return (\r\n        <BtnsForProcess\r\n            handleBtns={handleBtns}\r\n        />\r\n    );\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { ApplicationItem } from '../../../components/ApplicationList/ApplicationItem/ApplicationItem';\r\nimport { service } from '../../../service/service';\r\nimport * as appActions from '../../../actions/applicationActions';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { selectorsUser } from '../../../selectors/user';\r\nimport { menuTitleList } from '../../../service/menuTitleList';\r\n\r\n\r\nclass ApplicationItemContainer extends Component {\r\n    state = {\r\n        isOpen: false,\r\n        isFirstOpen: true,\r\n        executerList: [],\r\n        currCountExecuters: null,\r\n        countExecuter: 1,\r\n        currStatus: this.props.data.status\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { data: { currCountExecuters, countExecuter } } = this.props;\r\n\r\n        this.setState({ currCountExecuters, countExecuter });\r\n    }\r\n\r\n    firstOpenWrap = (callback) => {\r\n        const { isFirstOpen } = this.state;\r\n\r\n        if (isFirstOpen) {\r\n            callback();\r\n            this.setState({ isFirstOpen: false });\r\n        }\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        const { isOpen } = this.state;\r\n        this.firstOpenWrap(() => this.getExecutersList());\r\n\r\n        this.setState(() => { return { isOpen: !isOpen } })\r\n    }\r\n\r\n\r\n    getExecutersList = () => {\r\n        const { data: { id } } = this.props;\r\n\r\n        service.getExecuterList(id)\r\n            .then((list) => this.setState({ executerList: list }));\r\n    }\r\n\r\n\r\n    handleAccept = () => {\r\n        const check = window.confirm('Подтвердите принятие заявки');\r\n        if (!check) return;\r\n        \r\n        const { data: { id }, removeApplication, userID } = this.props;\r\n\r\n        service.postAcceptApp(userID, id)\r\n            .then(() => removeApplication(id));\r\n    }\r\n\r\n\r\n    handleReset = () => {\r\n        const check = window.confirm('Подтвердите отказ от заявки');\r\n        if (!check) return;\r\n        \r\n        const { data: { id }, removeApplication, userID } = this.props;\r\n\r\n        service.resetAppOfExecuter(userID, id)\r\n            .then(() => removeApplication(id))\r\n    }\r\n\r\n\r\n    handleRemove = () => {\r\n        const check = window.confirm('Подтвердите удаление');\r\n        if (!check) return;\r\n        \r\n        const { data: { id }, removeApplication } = this.props;\r\n\r\n        service.removeAppItem(id)\r\n            .then(() => removeApplication(id));\r\n    }\r\n\r\n    handleComplete = () => {\r\n        const check = window.confirm('Подтвердите завершение заявки');\r\n        if (!check) return;\r\n        \r\n        const { data: { id }, removeApplication } = this.props;\r\n\r\n        service.toCompleteApp(id)\r\n            .then(() => removeApplication(id))\r\n    }\r\n\r\n    handlePriority = (value) => {\r\n        const { data: { id }, updatePriority } = this.props;\r\n\r\n        service.setPriority(id, value)\r\n            .then(() => updatePriority(id, value))\r\n    }\r\n\r\n\r\n    filterHandle = () => {\r\n        const { currStatus } = this.state,\r\n            accept = this.handleAccept,\r\n            reset = this.handleReset,\r\n            remove = this.handleRemove,\r\n            removeExecuter = this.handleRemoveExecuter,\r\n            complete = this.handleComplete,\r\n            setPriority = this.handlePriority,\r\n            setCountExecuter = this.setCountExecuter,\r\n            addOneMoreExecuter = this.addOneMoreExecuter;\r\n\r\n\r\n        switch (currStatus) {\r\n            case menuTitleList[0].status: { //free\r\n                return { accept, remove, setPriority, setCountExecuter, addOneMoreExecuter };\r\n            }\r\n            case menuTitleList[1].status: { //progress\r\n                return { reset, remove, complete, removeExecuter };\r\n            }\r\n            case menuTitleList[3].status: { //pending\r\n                return { reset, remove, accept, setPriority, addOneMoreExecuter, removeExecuter, setCountExecuter };\r\n            }\r\n            default: return;\r\n        }\r\n    }\r\n\r\n\r\n    setCountExecuter = e => {\r\n        const { data: { id } } = this.props;\r\n        const { value } = e.target;\r\n\r\n        service.setCountExecuter(id, value).then(({ newStatus }) => {\r\n            this.setState({\r\n                countExecuter: value,\r\n                currStatus: newStatus\r\n            })\r\n        }, err => console.log(err))\r\n    }\r\n\r\n\r\n    handleRemoveExecuter = (userID) => {\r\n        const check = window.confirm('Подтвердите удаление');\r\n        if (!check) return;\r\n\r\n        const { data: { id }, removeApplication } = this.props,\r\n            { executerList, currCountExecuters, currStatus } = this.state;\r\n\r\n        const newExecutersList = executerList.filter(executer => executer.ID !== userID);\r\n\r\n        service.resetAppOfExecuter(userID, id).then(() => {\r\n            if (!newExecutersList.length && currStatus !== 'free' && currStatus !== 'pending') return removeApplication(id);\r\n\r\n            this.setState({\r\n                executerList: newExecutersList,\r\n                currCountExecuters: currCountExecuters - 1\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    addOneMoreExecuter = (idExecuter) => {\r\n        const { data: { id }, removeApplication } = this.props;\r\n\r\n        service.postAcceptApp(idExecuter, id).then(() => {\r\n\r\n            const newCount = this.state.currCountExecuters + 1;\r\n\r\n            this.setState(({ currCountExecuters }) => {\r\n                return {\r\n                    currCountExecuters: currCountExecuters + 1,\r\n                    currStatus: 'pending'\r\n                }\r\n            })\r\n\r\n            if (this.state.countExecuter === newCount) return removeApplication(id);\r\n\r\n            this.getExecutersList();\r\n        });\r\n    }\r\n\r\n\r\n    filterExecuters = () => {\r\n        const { existExecutersList } = this.props;\r\n        const { executerList } = this.state;\r\n\r\n        return existExecutersList.filter(({ ID }) => !(executerList.find(item => ID === item.ID)));\r\n    }\r\n\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        const { isOpen, executerList, currCountExecuters, countExecuter, currStatus } = this.state;\r\n        const updatedData = { ...data, executerList, currCountExecuters, countExecuter, currStatus };\r\n\r\n        return (\r\n            <ApplicationItem\r\n                data={updatedData}\r\n                handleClick={this.handleClick}\r\n                handleBtns={this.filterHandle()}\r\n                isOpen={isOpen}\r\n                existExecutersList={this.filterExecuters()}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userID: selectorsUser.id(state),\r\n        existExecutersList: selectorsUser.existExecuters(state)\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    const { updatePriority, removeApplication, addExecuterForApp } = bindActionCreators(appActions, dispatch)\r\n\r\n    return { removeApplication, updatePriority, addExecuterForApp };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ApplicationItemContainer);","import React, { Component } from 'react';\r\nimport { ApplicationList } from '../../components/ApplicationList/ApplicationList';\r\nimport { connect } from 'react-redux';\r\nimport { service } from '../../service/service';\r\nimport { bindActionCreators } from 'redux';\r\nimport { selectorApp } from '../../selectors/applications';\r\nimport * as applicationActions from '../../actions/applicationActions';\r\nimport { withLoader } from '../../hoc/withLoader';\r\nimport { updateStatusLoad } from '../../actions/loadActions';\r\nimport { selectorsLoad } from '../../selectors/load';\r\nimport uniqid from 'uniqid';\r\nimport ApplicationItemContainer from './ApplicationItem/ApplicationItemContainer';\r\nimport { selectorsUser } from '../../selectors/user';\r\n\r\n\r\nclass ApplicationListContainer extends Component {\r\n\r\n    componentDidMount = () => {\r\n        const {\r\n            setAppList,\r\n            updateStatusLoad,\r\n            updateTitleOfPage,\r\n            userID,\r\n            statusPage,\r\n            titlePage,\r\n            isAdmin\r\n        } = this.props;\r\n\r\n        service.getApplList(statusPage, userID, isAdmin).then(res => {\r\n            setAppList(res);\r\n            updateTitleOfPage(titlePage)\r\n            updateStatusLoad(false);\r\n        });\r\n    }\r\n\r\n\r\n    _generateAppList = () => {\r\n        const { appList } = this.props;\r\n\r\n        if (!appList.length) return <h2>Нет записей</h2>\r\n\r\n        return appList.length && appList.map(item => {\r\n            return (\r\n                <ApplicationItemContainer\r\n                    data={item}\r\n                    key={uniqid()}\r\n                />\r\n            );\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { statusLoad } = this.props;\r\n\r\n        const ApplicationListWithLoader = withLoader(ApplicationList, statusLoad);\r\n\r\n        return (\r\n            <ApplicationListWithLoader>\r\n                {this._generateAppList()}\r\n            </ApplicationListWithLoader>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        appList: selectorApp.list(state),\r\n        statusLoad: selectorsLoad.status(state),\r\n        userID: selectorsUser.id(state),\r\n        isAdmin: selectorsUser.role(state) !== 'Administrator' ? false : true,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    const {\r\n        setAppList,\r\n        updateTitleOfPage\r\n    } = bindActionCreators(applicationActions, dispatch)\r\n\r\n    return {\r\n        setAppList,\r\n        updateTitleOfPage,\r\n        updateStatusLoad: bindActionCreators(updateStatusLoad, dispatch),\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ApplicationListContainer);","import React, { Component } from 'react';\r\nimport { Loader } from '../components/Loader/Loader';\r\n\r\n\r\nexport const withLoader = (WrappedComponent, isLoad) => {\r\n    return class extends Component {\r\n\r\n        render() {\r\n            if (isLoad) {\r\n                return <Loader />\r\n            }\r\n            else {\r\n                return <WrappedComponent {...this.props} />\r\n            }\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Page } from '../../components/Page/Page';\r\nimport { ButtonAddApplication } from '../../components/Button/Button';\r\nimport ApplicationListContainer from '../ApplicationList/ApplicationListContainer';\r\n\r\n\r\nclass PageContainer extends Component {\r\n\r\n    render() {\r\n        const { titlePage, statusPage } = this.props;\r\n        \r\n        return (\r\n            <Page title={titlePage}>\r\n                <ButtonAddApplication />\r\n                <ApplicationListContainer\r\n                    statusPage={statusPage}\r\n                    titlePage={titlePage}\r\n                />\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default PageContainer;","import React from 'react';\r\nimport styles from './Sidebar.module.css';\r\n\r\n\r\nexport const Sidebar = ({ children }) => {\r\n    return (\r\n        <aside className={styles.bgSidebar}>\r\n            {children}\r\n        </aside>\r\n    );\r\n}","import React from 'react';\r\nimport styles from './MenuList.module.css';\r\n\r\n\r\nexport const MenuList = ({ children }) => {\r\n    return (\r\n        <nav className={styles.menu}>\r\n            {children}\r\n        </nav>\r\n    );\r\n}","import cyrillicToTranslit from 'cyrillic-to-translit-js';\r\n\r\n\r\nconst linker = word => {\r\n    word = `/${(cyrillicToTranslit().transform(word, '_')).toLowerCase()}`;\r\n    let link = '';\r\n\r\n    const wordLength = word.length;\r\n\r\n    for (let i = 0; i < wordLength; i++) {\r\n        const prevLetter = word[i - 1];\r\n        const letter = word[i];\r\n\r\n        if (letter === '_' && prevLetter === '_') continue;\r\n\r\n        link += letter;\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n\r\n\r\nexport default linker;","import React from 'react';\r\nimport styles from './MenuItem.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport linker from '../../../service/linker';\r\n\r\n\r\nexport const MenuItem = ({ titleMenu, activeMenu }) => {\r\n    const styleMenu = activeMenu ? styles.activeItem : styles.item;\r\n\r\n    return (\r\n        <Link to={linker(titleMenu)} className={styleMenu}>{titleMenu}</Link>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { MenuItem } from '../../../components/MenuList/MenuItem/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { selectorApp } from '../../../selectors/applications';\r\nimport { selectorsLoad } from '../../../selectors/load';\r\nimport * as applicationActions from '../../../actions/applicationActions';\r\nimport { selectorsUser } from '../../../selectors/user';\r\n\r\n\r\nclass MenuItemContainer extends Component {\r\n\r\n    isActiveMenu = () => {\r\n        const { titleMenu, titlePage } = this.props;\r\n\r\n        return titleMenu === titlePage ? true : false;\r\n    }\r\n\r\n\r\n    render() {\r\n        const { titleMenu } = this.props;\r\n\r\n        return (\r\n            <MenuItem\r\n                titleMenu={titleMenu}\r\n                activeMenu={this.isActiveMenu()}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        appList: selectorApp.list(state),\r\n        statusLoad: selectorsLoad.status(state),\r\n        userID: selectorsUser.id(state),\r\n        titlePage: selectorApp.title(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    const {\r\n        setAppList,\r\n        updateTitleOfPage\r\n    } = bindActionCreators(applicationActions, dispatch);\r\n\r\n    return {\r\n        setAppList,\r\n        updateTitleOfPage,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuItemContainer);","import React, { Component } from 'react';\r\nimport { MenuList } from '../../components/MenuList/MenuList';\r\nimport MenuItemContainer from './MenuItem/MenuItemContainer';\r\nimport uniqid from 'uniqid';\r\nimport { menuTitleList } from '../../service/menuTitleList';\r\nimport { connect } from 'react-redux';\r\nimport { selectorsUser } from '../../selectors/user';\r\n\r\n\r\nclass MenuListContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.appList = menuTitleList;\r\n    }\r\n\r\n    getMenuList = () => {\r\n        const { role } = this.props;\r\n\r\n        const filteredItemList = this.appList.filter(item => item.forRole === role || !item.forRole)\r\n\r\n        return filteredItemList.map(item => {\r\n            return (\r\n                <MenuItemContainer\r\n                    {...item}\r\n                    key={uniqid()}\r\n                />\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MenuList>\r\n                {this.getMenuList()}\r\n            </MenuList>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        role: selectorsUser.role(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(MenuListContainer);","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styles from './BtnExit.module.css';\r\n\r\n\r\nexport const BtnExit = ({ handleExit }) => {\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <button className={styles.btn} onClick={() => handleExit(history)}>Выйти</button>\r\n    );\r\n}","class MyCookie {\r\n    constructor(name, isObj = false) {\r\n        this.name = name;\r\n        this.isObj = isObj;\r\n    }\r\n\r\n    get = () => {\r\n        let matches = document.cookie.match(new RegExp(\r\n            `(?:^|; )${this.name.replace(/([.$?*|{}()[]\\\\\\/\\+^])/g, '\\\\$1')}=([^;]*)`\r\n        ));\r\n\r\n        if (!matches) return;\r\n        let result = decodeURIComponent(matches[1]);\r\n        if (this.isObj && result !== undefined) result = JSON.parse(result);\r\n\r\n        return matches ? result : undefined;\r\n    }\r\n\r\n    set = (value, options = {}) => {\r\n        if (this.isObj) value = JSON.stringify(value);\r\n\r\n        options = {\r\n            path: '/',\r\n            'max-age': 1000 * 60 * 60 * 23,\r\n            ...options\r\n        };\r\n\r\n\r\n        if (options.expires instanceof Date) {\r\n            options.expires = options.expires.toUTCString();\r\n        }\r\n\r\n        let updatedCookie = encodeURIComponent(this.name) + \"=\" + encodeURIComponent(value);\r\n\r\n        for (let optionKey in options) {\r\n            updatedCookie += \"; \" + optionKey;\r\n            let optionValue = options[optionKey];\r\n            if (optionValue !== true) {\r\n                updatedCookie += \"=\" + optionValue;\r\n            }\r\n        }\r\n\r\n        document.cookie = updatedCookie;\r\n    }\r\n\r\n    remove = () => {\r\n        this.set(\"\", {\r\n            'max-age': -1\r\n        })\r\n    }\r\n}\r\n\r\nexport const myCookie = new MyCookie();\r\nexport const myCookieUser = new MyCookie('user', true);\r\nexport const myCookieIsLogin = new MyCookie('login');\r\n","import * as actionTypes from '../constants/actionTypes';\r\n\r\n\r\nexport function setUserInfo(data) {\r\n    return {\r\n        type: actionTypes.SET_USER_INFO,\r\n        data\r\n    }\r\n}\r\n\r\nexport function updateStatusLogin(isStatus) {\r\n    return {\r\n        type: actionTypes.UPDATE_STATUS_LOGIN,\r\n        isStatus\r\n    }\r\n}\r\n\r\nexport function setExistExecuters(list) {\r\n    return {\r\n        type: actionTypes.SET_EXIST_EXECUTERS,\r\n        list\r\n    }\r\n}\r\n\r\nexport function login(data) {\r\n    return {\r\n        type: actionTypes.LOGIN,\r\n        data\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: actionTypes.LOGOUT\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BtnExit } from '../../components/BtnExit/BtnExit';\r\nimport { service } from '../../service/service';\r\nimport { myCookieUser, myCookieIsLogin } from '../../service/myCookie';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as userActions from '../../actions/userActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass BtnExitContainer extends Component {\r\n    handleExit = (history) => {\r\n        const { logout } = this.props;\r\n\r\n        const check = window.confirm('Подтвердите выход');\r\n        if (!check) return;\r\n        \r\n        service.logout().then(res => {\r\n            \r\n            myCookieUser.remove();\r\n            myCookieIsLogin.remove();\r\n            logout();\r\n\r\n            history.push('/login');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BtnExit handleExit={this.handleExit} />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    const { logout } = bindActionCreators(userActions, dispatch);\r\n\r\n    return { logout };\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(BtnExitContainer);","import React from 'react';\r\nimport styles from './UserInfo.module.css';\r\nimport BtnExitContainer from '../../../containers/BtnExit/BtnExitContainer';\r\n\r\n\r\nexport const UserInfo = ({ role, name }) => {\r\n    return (\r\n        <div className={styles.userInfo}>\r\n            <div className={styles.icon} />\r\n            <BtnExitContainer />\r\n            <h3 className={styles.title}>{name}</h3>\r\n            <h4 className={styles.title + ' ' + styles.role}>{normalizeRole(role)}</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst normalizeRole = role => {\r\n    switch (role) {\r\n        case 'Executer': { return 'Исполнитель' }\r\n        case 'Administrator': { return 'Администратор' }\r\n        default: return;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectorsUser } from '../../../selectors/user';\r\nimport { UserInfo } from '../../../components/Sidebar/UserInfo/UserInfo';\r\n\r\n\r\nclass UserInfoContainer extends Component {\r\n\r\n    render() {\r\n        const { role, name } = this.props;\r\n        \r\n        return (\r\n            <UserInfo\r\n                name={name}\r\n                role={role}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        role: selectorsUser.role(state),\r\n        name: selectorsUser.name(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(UserInfoContainer);","import React, { Component } from 'react';\r\nimport { Sidebar } from '../../components/Sidebar/Sidebar';\r\nimport MenuListContainer from '../MenuList/MenuListContainer';\r\nimport UserInfoContainer from './UserInfo/UserInfoContainer';\r\nimport { connect } from 'react-redux';\r\nimport { selectorsUser } from '../../selectors/user';\r\n\r\n\r\nclass SidebarContainer extends Component {\r\n\r\n    render() {\r\n        const { isLogin, userRole } = this.props;\r\n\r\n        return (\r\n            <Sidebar>\r\n                {isLogin\r\n                    ? (\r\n                        <>\r\n                            <UserInfoContainer />\r\n                            {userRole !== 'User' ? <MenuListContainer /> : false}\r\n                        </>\r\n                    )\r\n                    :\r\n                    false}\r\n\r\n            </Sidebar>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLogin: selectorsUser.status(state),\r\n        userRole: selectorsUser.role(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(SidebarContainer);","import React from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nexport const ReportList = ({ children }) => {\r\n    return (\r\n        <>\r\n            {children.map(({ title, handle }) => <button onClick={handle} key={uniqid()}>{title}</button>)}\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nexport const CalendarInterval = ({ getStartDate, getEndDate }) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor='date_start'>\r\n                <span>С: </span>\r\n                <input type='date' onChange={getStartDate} id='date_start' />\r\n            </label>\r\n            <label htmlFor='date_end'>\r\n                <span>По: </span>\r\n\r\n                <input type='date' onChange={getEndDate} id='date_end' />\r\n            </label>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport uniqid from 'uniqid';\r\nimport { SelectListExecuters } from '../../../containers/SelectList/SelectListContainer';\r\nimport { dateNormalize } from '../../../service/normalizeFunctions';\r\nimport styles from './ReportItem.module.css';\r\nimport { CalendarInterval } from '../CalendarInterval/CalendarInterval';\r\n\r\n\r\nexport const ReportForCompletedStatus = ({ title, getExecuterReport, children, handleDate }) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={styles.title}>{title}</h2>\r\n\r\n            <SelectListExecuters\r\n                title='Выбрать исполнителя'\r\n            >\r\n                {value => getExecuterReport(value)}\r\n            </SelectListExecuters>\r\n\r\n            {\r\n                children.length && (\r\n                    children[0].status === 'process'\r\n                        ? false\r\n                        : (\r\n                            <div className={styles.wrapCalendar}>\r\n                            <CalendarInterval\r\n                                getStartDate={handleDate.getStartDate}\r\n                                getEndDate={handleDate.getEndDate}\r\n                            />\r\n                            </div>\r\n                        )\r\n                )\r\n            }\r\n\r\n            {\r\n                children.length\r\n                    ?\r\n                    (\r\n                        <table className={styles.table}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td><b>Исполнитель</b></td>\r\n                                    <td><b>Клиент</b></td>\r\n                                    <td><b>Задача</b></td>\r\n                                    <td><b>Дата начала</b></td>\r\n                                    {children[0].status === 'process' ? false : <td><b>Дата завершения</b></td>}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {children.map(item => {\r\n                                    return (\r\n                                        <tr key={uniqid()}>\r\n                                            <td>{item.executer_name}</td>\r\n                                            <td>{item.client_name}</td>\r\n                                            <td>{item.task}</td>\r\n                                            <td>{dateNormalize(item.date_start, '.')}</td>\r\n                                            {item.status === 'process' ? false : <td>{dateNormalize(item.date_end, '.')}</td>}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    )\r\n                    : <h3>Нет записей</h3>\r\n            }\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { ReportForCompletedStatus } from '../../../components/ReportList/ReportItem/ReportItem';\r\nimport { service } from '../../../service/service';\r\nimport { dateNormalize } from '../../../service/normalizeFunctions';\r\n\r\n\r\nexport class ReportItemWithStatus extends Component {\r\n    state = {\r\n        data: [],\r\n        filteredData: false,\r\n        dateStart: false,\r\n        dateEnd: false\r\n    }\r\n\r\n    getStartDate = e => {\r\n        const { value } = e.target;\r\n        const { data } = this.state;\r\n\r\n        const selectedDate = new Date(value); //Selected date\r\n\r\n        const newData = data.filter(({ date_end }) => {\r\n            const dateEnd = new Date(date_end); //Date of app\r\n            return (selectedDate < dateEnd || date_end > this.state.dateEnd) || dateNormalize(selectedDate) === dateNormalize(date_end);\r\n        })\r\n\r\n        this.setState({\r\n            filteredData: newData,\r\n            dateStart: selectedDate\r\n        })\r\n    }\r\n\r\n    getEndDate = e => {\r\n        const { value } = e.target;\r\n        const { data, dateStart } = this.state;\r\n\r\n        const needDate = new Date(value)\r\n        const newData = data.filter(({ date_end }) => {\r\n            const dateEnd = new Date(date_end);\r\n\r\n            return needDate > dateEnd && dateStart < dateEnd;\r\n        })\r\n\r\n        this.setState({\r\n            filteredData: newData,\r\n            dateEnd: needDate\r\n        })\r\n    }\r\n\r\n    getList = (id) => {\r\n        const { status } = this.props;\r\n\r\n        service.getReportAppWithStatus(status, id).then(data => this.setState({ data, filteredData: false }));\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { status } = this.props;\r\n\r\n        service.getReportAppWithStatus(status).then(data => this.setState({ data }))\r\n    }\r\n\r\n    render() {\r\n        const { title } = this.props;\r\n\r\n        return (\r\n            <ReportForCompletedStatus\r\n                getExecuterReport={this.getList}\r\n                title={title}\r\n                handleDate={{\r\n                    getStartDate: this.getStartDate,\r\n                    getEndDate: this.getEndDate\r\n                }}\r\n            >\r\n                {this.state.filteredData ? this.state.filteredData : this.state.data}\r\n            </ReportForCompletedStatus>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ReportList } from '../../components/ReportList/ReportList';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as applicationActions from '../../actions/applicationActions';\r\nimport { ReportItemWithStatus } from './ReportItem/ReportItemContainer';\r\n\r\nclass ReportListContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reportList: [\r\n                {\r\n                    title: 'Выполненные заявки',\r\n                    handle: () => this.getReportListWithStatus('completed', 'Выполненные заявки')\r\n                },\r\n                {\r\n                    title: 'Заявки в работе',\r\n                    handle: () => this.getReportListWithStatus('process', 'Заявки в работе')\r\n                },\r\n            ],\r\n            titleReport: 'asd',\r\n            currentReport: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { updateTitleOfPage } = this.props;\r\n\r\n        updateTitleOfPage('Отчёты');\r\n    }\r\n\r\n    getReportListWithStatus = (status, titleReport) => {\r\n        this.setState({\r\n            titleReport,\r\n            currentReport: () => <ReportItemWithStatus status={status} title={titleReport} />,\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { reportList } = this.state;\r\n        const G = this.state.currentReport;\r\n\r\n        return (\r\n            <>\r\n                <ReportList>\r\n                    {reportList}\r\n                </ReportList>\r\n                {G && <G />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    const { updateTitleOfPage } = bindActionCreators(applicationActions, dispatch)\r\n\r\n    return { updateTitleOfPage };\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(ReportListContainer);","import React from 'react';\r\nimport { Page } from '../Page';\r\nimport ReportListContainer from '../../../containers/ReportList/ReportListContainer';\r\n\r\n\r\nexport const ReportPage = () => {\r\n    return (\r\n        <Page title={'Отчеты'}>\r\n            <ReportListContainer />\r\n        </Page>\r\n    );\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styles from './Login.module.css';\r\n\r\n\r\nexport const Login = ({ handleLogin, handlePassword, handleSend, errorText }) => {\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className={styles.login}>\r\n            <div className={styles.field}>\r\n                <h2>Логин</h2>\r\n                <input type='text' placeholder='Введите логин' onChange={handleLogin} />\r\n            </div>\r\n            <div className={styles.field}>\r\n                <h2>Пароль</h2>\r\n                <input type='password' placeholder='Введите пароль' onChange={handlePassword} />\r\n            </div>\r\n\r\n            {errorText && <div className={styles.err}>{errorText}</div>}\r\n\r\n            <button type='button' onClick={() => handleSend(history)} className={styles.btn}>Войти</button>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Login } from '../../components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { service } from '../../service/service';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as userActions from '../../actions/userActions';\r\nimport { selectorsUser } from '../../selectors/user';\r\nimport linker from '../../service/linker';\r\nimport { myCookieUser, myCookieIsLogin } from '../../service/myCookie';\r\n\r\n\r\nclass LoginContainer extends Component {\r\n    state = {\r\n        login: '',\r\n        password: '',\r\n        errorText: ''\r\n    }\r\n\r\n    handleLogin = e => {\r\n        const { value } = e.target;\r\n        this.setState({ login: value });\r\n    }\r\n\r\n    handlePassword = e => {\r\n        const { value } = e.target;\r\n\r\n        this.setState({ password: value });\r\n    }\r\n\r\n    successfulAuth = (data, history) => {\r\n        const { doLogin } = this.props;\r\n\r\n        \r\n        doLogin(data);\r\n        \r\n        myCookieUser.set({ ...data });\r\n        myCookieIsLogin.set(true);\r\n        \r\n        if (data.role === 'User') return history.push('/application/add')\r\n        history.push(linker('Свободные'))\r\n    }\r\n\r\n    handleSend = (history) => {\r\n        const { login, password } = this.state;\r\n\r\n        service.login(login, password)\r\n            .then(\r\n                data => {\r\n                    if (data.status === false) return;\r\n                    this.successfulAuth(data, history);\r\n                },\r\n                err => {\r\n                    if (err === 403) this.setState({ errorText: 'Неправильный логин или пароль' });\r\n                    \r\n                }\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const { errorText } = this.state;\r\n\r\n        return (\r\n            <Login\r\n                handleLogin={this.handleLogin}\r\n                handlePassword={this.handlePassword}\r\n                handleSend={this.handleSend}\r\n                errorText={errorText}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { loginStatus: selectorsUser.getAllInfo(state) }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    const { login } = bindActionCreators(userActions, dispatch);\r\n\r\n    return { doLogin: login };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","import React from 'react';\r\nimport { Page } from '../Page';\r\nimport LoginContainer from '../../../containers/Login/LoginContainer';\r\nimport styles from './LoginPage.module.css';\r\n\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <Page title={'Авторизация'}>\r\n            <div className={styles.center}>\r\n                <LoginContainer />\r\n            </div>\r\n        </Page>\r\n    );\r\n}","import React from 'react';\r\nimport styles from './FormAddApplication.module.css';\r\nimport { Button } from '../Button/Button';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport const FormAddApplication = ({ handleChange, handleSubmit, error }) => {\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className={styles.formAddAoolication}>\r\n            <div className={styles.field}>\r\n                <h3>Имя Фамилия Отчество*</h3>\r\n                <input type='text' placeholder='ФИО' onChange={e => handleChange('fullName', e)} />\r\n            </div>\r\n\r\n            <div className={styles.field}>\r\n                <h3>Номер корпуса*</h3>\r\n                <select onChange={e => handleChange('caseNum', e)}>\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className={styles.field}>\r\n                <h3>Номер телефона*</h3>\r\n                <input type='tel' placeholder='+7' required onChange={e => handleChange('phone', e)} />\r\n            </div>\r\n\r\n            <div className={styles.field}>\r\n                <h3>Описание задачи*</h3>\r\n                <textarea required onChange={e => handleChange('task', e)} />\r\n            </div>\r\n\r\n            <div className={styles.error}>{error}</div>\r\n\r\n            <Button\r\n                title='Отправить'\r\n                click={() => handleSubmit(history)}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { FormAddApplication } from '../../components/FormAddApplication/FormAddApplication';\r\nimport { service } from '../../service/service';\r\n\r\n\r\nclass FormAddApplicationContainer extends Component {\r\n    state = {\r\n        data: {\r\n            fullName: '',\r\n            caseNum: 1,\r\n            phone: '',\r\n            task: ''\r\n        },\r\n        error: false\r\n    }\r\n\r\n    handleChangeInput = (type, e) => {\r\n        const { value } = e.target;\r\n\r\n        this.setState(({ data }) => {\r\n            return { data: { ...data, [type]: value } }\r\n        });\r\n    }\r\n\r\n    handleSubmit = (history) => {\r\n        const data = { ...this.state.data };\r\n\r\n        for (const item in data) {\r\n            if (!data[item]) return this.setState({ error: 'Одно из полей не заполнено' });\r\n        }\r\n\r\n        const check = window.confirm('Подтвердите отправку');\r\n        if (!check) return;\r\n\r\n        service.addApplication(data).then(\r\n            () => {\r\n                alert('Заявка отправлена');\r\n                history.push('/');\r\n            },\r\n            (err) => console.log(err)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { error } = this.state;\r\n        return (\r\n            <FormAddApplication\r\n                handleChange={this.handleChangeInput}\r\n                handleSubmit={this.handleSubmit}\r\n                error={error}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormAddApplicationContainer;","import React from 'react';\r\nimport { Page } from '../Page';\r\nimport FormAddApplicationContainer from '../../../containers/FormAddApplication/FormAddApplicationContainer';\r\n\r\n\r\nexport const AddApplicationPage = () => {\r\n\r\n    return (\r\n        <Page title='Новая заявка'>\r\n            <FormAddApplicationContainer />\r\n        </Page>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { App } from '../../components/App/App';\r\nimport PageContainer from '../Page/PageContainer';\r\nimport SidebarContainer from '../Sidebar/SidebarContainer';\r\nimport { withRoutes } from '../../hoc/withRoutes';\r\nimport { service } from '../../service/service';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as userActions from '../../actions/userActions';\r\nimport { myCookieUser } from '../../service/myCookie';\r\nimport { selectorsUser } from '../../selectors/user';\r\n\r\n\r\nclass AppContainer extends Component {\r\n    componentDidMount = () => {\r\n        const { setExistExecuters, login } = this.props;\r\n\r\n        service.getExistExecuters().then(list => {\r\n            setExistExecuters(list);\r\n        });\r\n\r\n        const savedUserData = myCookieUser.get();\r\n        savedUserData && login(savedUserData);\r\n    }\r\n    \r\n    render() {\r\n        const PageContainerWithRoutes = withRoutes(PageContainer);\r\n\r\n        return (\r\n            <App>\r\n                <SidebarContainer />\r\n                <PageContainerWithRoutes />\r\n            </App>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        existExecutersList: selectorsUser.existExecuters(state)\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    const { setExistExecuters, login } = bindActionCreators(userActions, dispatch);\r\n\r\n    return { setExistExecuters, login };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport linker from '../service/linker';\r\nimport uniqid from 'uniqid';\r\nimport { menuTitleList } from '../service/menuTitleList';\r\nimport { ReportPage } from '../components/Page/ReportPage/ReportPage';\r\nimport { LoginPage } from '../components/Page/LoginPage/LoginPage';\r\nimport { store } from '../stores/stores';\r\nimport { selectorsUser } from '../selectors/user';\r\nimport { AddApplicationPage } from '../components/Page/AddApplicationPage/AddApplicationPage';\r\n\r\n\r\nexport const withRoutes = (WrappedComponent) => {\r\n\r\n    return class extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { isLogin: false, role: false }\r\n            this._isMounted = false;\r\n        }\r\n\r\n        componentDidMount = () => {\r\n            this._isMounted = true;\r\n            this.updateLoginStatus();\r\n            this.subscriber();\r\n        }\r\n\r\n        subscriber = () => {\r\n            store.subscribe(this.updateLoginStatus);\r\n\r\n        }\r\n\r\n        componentWillUnmount = () => {\r\n            this._isMounted = false;\r\n            const unsubscribe = this.subscriber;\r\n            unsubscribe();\r\n        }\r\n\r\n        updateLoginStatus = () => {\r\n            const isReduxLogin = selectorsUser.status(store.getState());\r\n            const isReduxRole = selectorsUser.role(store.getState());\r\n            const { isLogin } = this.state;\r\n\r\n            if (isReduxLogin === isLogin) return;\r\n            if (!this._isMounted) return;\r\n\r\n            this.setState({\r\n                isLogin: isReduxLogin,\r\n                role: isReduxRole\r\n            });\r\n        }\r\n\r\n\r\n        renderForRoute = (titlePage, statusPage = '') => {\r\n            return (\r\n                <WrappedComponent\r\n                    {...this.props}\r\n                    statusPage={statusPage}\r\n                    titlePage={titlePage}\r\n                />\r\n            )\r\n        }\r\n\r\n        routeConstructor = (path, renderElem) => {\r\n            return (\r\n                <Route\r\n                    path={path}\r\n                    key={uniqid()}\r\n                    render={renderElem}\r\n                />\r\n            )\r\n        }\r\n\r\n        getListRoutes = () => {\r\n            const newList = menuTitleList.filter(item => item.status);\r\n\r\n            return newList.map(({ titleMenu, status }) => {\r\n                return this.routeConstructor(linker(titleMenu), () => this.renderForRoute(titleMenu, status))\r\n            });\r\n        }\r\n\r\n        otherRoutes = () => {\r\n            const { role } = this.state;\r\n            if (role !== 'Administrator') return;\r\n\r\n            const reports = this.routeConstructor(linker('Отчёты'), ReportPage);\r\n\r\n            return [reports];\r\n        }\r\n\r\n        loginRoute = () => {\r\n            const page = this.routeConstructor('/login', LoginPage);\r\n\r\n            return [page];\r\n        }\r\n\r\n        addAppPage = () => {\r\n            const page = this.routeConstructor('/application/add', AddApplicationPage);\r\n\r\n            return [page];\r\n        }\r\n\r\n        renderForMain = () => {\r\n            const { isLogin, role } = this.state;\r\n\r\n            if (!isLogin || role === 'User') return;\r\n\r\n            return (\r\n                <>\r\n                    {<Redirect from='/login' to={linker('свободные')} />}\r\n                    {this.getListRoutes()}\r\n                    {this.otherRoutes()}\r\n                    {this.addAppPage()}\r\n                </>\r\n            );\r\n        }\r\n\r\n        generatePageAddApplication = () => {\r\n            const { isLogin, role } = this.state;\r\n\r\n            if (isLogin && role === 'User') return this.addAppPage();\r\n        }\r\n        \r\n        render() {\r\n\r\n            return (\r\n                <Switch>\r\n                    <Redirect exact from='/' to='/login' />\r\n                    {this.renderForMain()}\r\n                    {this.loginRoute()}\r\n                    {this.generatePageAddApplication()}\r\n                </Switch>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppContainer from './containers/App/AppContainer';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './stores/stores';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nconst RenderApp = () => {\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <React.StrictMode>\r\n                    <AppContainer />\r\n                </React.StrictMode>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\n\r\nReactDOM.render(<RenderApp />, document.getElementById('root'));"],"sourceRoot":""}